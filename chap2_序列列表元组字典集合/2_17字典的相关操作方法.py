d = {1001:'李梅', 1002:'李涵', 1003:'李华'}
print(d) # {1001: '李梅', 1002: '李涵', 1003: '李华'}

# 字典，可变序列 向字典中添加元素
d[1004] = '张三'
print(d) # {1001: '李梅', 1002: '李涵', 1003: '李华', 1004: '张三'} 直接使用赋值运算符向字典添加元素

# 获取字典中所有的key
keys = d.keys()
print(keys) # dict_keys([1001, 1002, 1003, 1004])
print(list(keys)) # [1001, 1002, 1003, 1004]列表
print(tuple(keys)) # (1001, 1002, 1003, 1004)元组

# 获取字典中所有的value
values = d.values()
print(values) # dict_values(['李梅', '李涵', '李华', '张三'])
print(list(values)) # ['李梅', '李涵', '李华', '张三']
print(tuple(values)) # ('李梅', '李涵', '李华', '张三')

# 将字典中的数据转成key-value的形式，以元组的方式展现
lst = list(d.items())
print(lst) # [(1001, '李梅'), (1002, '李涵'), (1003, '李华'), (1004, '张三')]


d = dict(lst)
print(d) # 字典 {1001: '李梅', 1002: '李涵', 1003: '李华', 1004: '张三'}

# 使用pop()函数：
print(d.pop(1001)) # 李梅 取出1001对应的value 同时删除1001所对应的键值对
print(d) # {1002: '李涵', 1003: '李华', 1004: '张三'}

print(d.pop(1008, '不存在')) # 不存在 


# 随机删除 伪随机
print(d.popitem()) # (1004, '张三')
print(d) # {1002: '李涵', 1003: '李华'}


# 清空字典中所有的元素
d.clear()
print(d) # {}
# python一切皆对象，每个对象都有一个bool值
print(bool(d)) # False 空元组 列表 字典的bool值为False